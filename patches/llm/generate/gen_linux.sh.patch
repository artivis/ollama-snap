diff --git a/llm/generate/gen_linux.sh b/llm/generate/gen_linux.sh
index a2970957..84dd5ea9 100755
--- a/llm/generate/gen_linux.sh
+++ b/llm/generate/gen_linux.sh
@@ -85,7 +85,7 @@ if [ -z "${OLLAMA_SKIP_CPU_GENERATE}" ]; then
         # -DGGML_AVX512_VNNI -- 2021 Intel Alder Lake
 
         COMMON_CPU_DEFS="-DBUILD_SHARED_LIBS=on -DCMAKE_POSITION_INDEPENDENT_CODE=on -DGGML_NATIVE=off -DGGML_OPENMP=off"
-        if [ -z "${OLLAMA_CPU_TARGET}" -o "${OLLAMA_CPU_TARGET}" = "cpu" ]; then
+        if [ -z "${OLLAMA_CPU_TARGET}" ] || echo "${OLLAMA_CPU_TARGET}" | grep -qw 'cpu'; then
             #
             # CPU first for the default library, set up as lowest common denominator for maximum compatibility (including Rosetta)
             #
@@ -104,7 +104,7 @@ if [ -z "${OLLAMA_SKIP_CPU_GENERATE}" ]; then
             #
             # ARM chips in M1/M2/M3-based MACs and NVidia Tegra devices do not currently support avx extensions.
             #
-            if [ -z "${OLLAMA_CPU_TARGET}" -o "${OLLAMA_CPU_TARGET}" = "cpu_avx" ]; then
+            if [ -z "${OLLAMA_CPU_TARGET}" ] || echo "${OLLAMA_CPU_TARGET}" | grep -qw 'cpu_avx'; then
                 #
                 # ~2011 CPU Dynamic library with more capabilities turned on to optimize performance
                 # Approximately 400% faster than LCD on same CPU
@@ -120,7 +120,7 @@ if [ -z "${OLLAMA_SKIP_CPU_GENERATE}" ]; then
                 compress
             fi
 
-            if [ -z "${OLLAMA_CPU_TARGET}" -o "${OLLAMA_CPU_TARGET}" = "cpu_avx2" ]; then
+            if [ -z "${OLLAMA_CPU_TARGET}" ] || echo "${OLLAMA_CPU_TARGET}" | grep -qw 'cpu_avx2'; then
                 #
                 # ~2013 CPU Dynamic library
                 # Approximately 10% faster than AVX on same CPU
@@ -191,7 +191,7 @@ if [ -z "${OLLAMA_SKIP_CUDA_GENERATE}" -a -d "${CUDA_LIB_DIR}" ]; then
     dist
     echo "Installing CUDA dependencies in ${CUDA_DIST_DIR}"
     mkdir -p "${CUDA_DIST_DIR}"
-    for lib in ${CUDA_LIB_DIR}/libcudart.so* ${CUDA_LIB_DIR}/libcublas.so* ${CUDA_LIB_DIR}/libcublasLt.so* ; do
+    for lib in ${CUDA_LIB_DIR}/libcudart.so* ${CUDA_LIB_DIR}/libcublas.so* ${CUDA_LIB_DIR}/libcublasLt.so*; do
         cp -a "${lib}" "${CUDA_DIST_DIR}"
     done
     compress
@@ -269,9 +269,9 @@ if [ -z "${OLLAMA_SKIP_ROCM_GENERATE}" -a -d "${ROCM_PATH}" ]; then
 
     # copy the ROCM dependencies
     mkdir -p "${ROCM_DIST_DIR}"
-    for dep in $(ldd "${BUILD_DIR}/bin/ollama_llama_server" | grep "=>" | cut -f2 -d= | cut -f2 -d' ' | grep -v "${GOARCH}/rocm${ROCM_VARIANT}" | grep -e rocm -e amdgpu -e libtinfo -e libnuma -e libelf ); do
+    for dep in $(ldd "${BUILD_DIR}/bin/ollama_llama_server" | grep "=>" | cut -f2 -d= | cut -f2 -d' ' | grep -v "${GOARCH}/rocm${ROCM_VARIANT}" | grep -e rocm -e amdgpu -e libtinfo -e libnuma -e libelf); do
         cp -a "${dep}"* "${ROCM_DIST_DIR}"
-        if [ $(readlink -f "${dep}") != "${dep}" ] ; then
+        if [ $(readlink -f "${dep}") != "${dep}" ]; then
             cp $(readlink -f "${dep}") "${ROCM_DIST_DIR}"
         fi
     done
@@ -282,4 +282,7 @@ fi
 
 cleanup
 wait_for_compress
-echo "go generate completed.  LLM runners: $(cd ${PAYLOAD_BASE}; echo *)"
+echo "go generate completed.  LLM runners: $(
+    cd ${PAYLOAD_BASE}
+    echo *
+)"
